{
  "version": "Notebook/1.0",
  "items": [
    {
      "type": 1,
      "content": {
        "json": "## Guardicore Centra\n---"
      },
      "name": "text - 2"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "title": "Agent Health - Only data from the past 7 days is taken into account",
        "items": [
          {
            "type": 9,
            "content": {
              "version": "KqlParameterItem/1.0",
              "parameters": [
                {
                  "id": "16e7897b-dcc1-4647-b6d2-f1b92f3a1e74",
                  "version": "KqlParameterItem/1.0",
                  "name": "time_quantity",
                  "type": 1,
                  "isRequired": true,
                  "typeSettings": {
                    "paramValidationRules": [
                      {
                        "regExp": "[0-9]+",
                        "match": true,
                        "message": "Must be a number"
                      }
                    ]
                  },
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "value": "9",
                  "label": "Time Quantity"
                },
                {
                  "id": "5d915662-3c3d-425c-b325-967b8512ddad",
                  "version": "KqlParameterItem/1.0",
                  "name": "time_unit",
                  "label": "Time Unit",
                  "type": 2,
                  "isRequired": true,
                  "typeSettings": {
                    "additionalResourceOptions": [],
                    "showDefault": false
                  },
                  "jsonData": "[\"Hours\", \"Minutes\", \"Days\"]",
                  "timeContext": {
                    "durationMs": 86400000
                  },
                  "value": "Hours"
                }
              ],
              "style": "above",
              "queryType": 8
            },
            "name": "parameters - 4"
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let time_amount = case(\n        '{time_unit}' == 'Minutes', timespan('{time_quantity}m'),\n        '{time_unit}' == 'Hours', timespan('{time_quantity}h'),\n        '{time_unit}' == 'Days', timespan('{time_quantity}d'),\n        timespan('24h')\n);\nlet recentData = GuardicoreAgents_CL\n| where TimeGenerated >= ago(7d);\n\nlet max_ts = toscalar(\n    recentData\n    | summarize max(sampling_timestamp_d)\n);\nrecentData\n| where sampling_timestamp_d == max_ts\n| where unixtime_milliseconds_todatetime(last_seen_d) < ago(time_amount)\n| project \n    AgentName = display_name_s, \n    AgentID=asset_id_g, \n    LastSeen = unixtime_milliseconds_todatetime(last_seen_d)",
              "size": 0,
              "title": "Current missing agents ",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces"
            },
            "customWidth": "50",
            "name": "query - 1",
            "styleSettings": {
              "maxWidth": "25%"
            }
          }
        ]
      },
      "name": "Agent group"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let startDate = startofday(ago(7d));\nlet endDate = startofday(now());\nlet all_days = range day from startDate to endDate step 1d;\n\nlet rawData = GuardicorePolicyRules_CL\n| where TimeGenerated >= startDate\n| extend sampling_ts = unixtime_seconds_todatetime(sampling_timestamp_d)\n| extend day = startofday(sampling_ts);\n\nlet daily_max_ts = rawData\n| summarize max_ts = max(sampling_ts) by day;\n\nlet daily_counts = rawData\n| join kind=inner (\n    daily_max_ts\n) on day, $left.sampling_ts == $right.max_ts\n| summarize value = count() by day;\n\nall_days\n| join kind=leftouter (daily_counts) on day\n| extend value = coalesce(value, 0)\n| sort by day asc\n| project day = format_datetime(day, 'yyyy-MM-dd'), value",
              "size": 0,
              "title": "Active rules (by day)",
              "timeContext": {
                "durationMs": 86400000
              },
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "categoricalbar"
            },
            "customWidth": "50",
            "name": "query - 3",
            "styleSettings": {
              "maxWidth": "60%"
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let recentData = GuardicorePolicyRules_CL\n| where TimeGenerated >= ago(24h);\n\nlet max_ts = toscalar(\n    recentData\n    | summarize max(sampling_timestamp_d)\n);\n\nrecentData\n| where sampling_timestamp_d == max_ts\n| summarize count = count() by action_s\n| extend actionFormatted = replace(\"_\", \" \", tolower(action_s))\n| extend actionFormatted = strcat(toupper(substring(actionFormatted, 0, 1)), substring(actionFormatted, 1))\n| project Action = actionFormatted, Count = count",
              "size": 0,
              "title": "Rule counts",
              "timeContext": {
                "durationMs": 86400000
              },
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "text",
              "gridSettings": {
                "sortBy": [
                  {
                    "itemKey": "Action",
                    "sortOrder": 1
                  }
                ]
              },
              "sortBy": [
                {
                  "itemKey": "Action",
                  "sortOrder": 1
                }
              ],
              "tileSettings": {
                "showBorder": false
              },
              "textSettings": {
                "style": "title"
              }
            },
            "customWidth": "50",
            "name": "query - allow-inline",
            "styleSettings": {
              "padding": "30",
              "maxWidth": "20%"
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let timeWindow = 24h;\nlet sourceConnections = GuardicoreConnections_CL \n| where TimeGenerated >= ago(timeWindow)\n| distinct source_node_id_g, destination_node_id_g, id_g, count_d, TimeGenerated\n| summarize SourceConnections = tolong(sum(count_d)) by source_node_id_g\n| project AssetId = tostring(source_node_id_g), SourceConnections;\nlet destConnections = GuardicoreConnections_CL \n| where TimeGenerated >= ago(timeWindow)\n| distinct source_node_id_g, destination_node_id_g, id_g, count_d, TimeGenerated\n| summarize DestinationConnections = tolong(sum(count_d)) by destination_node_id_g\n| project AssetId = tostring(destination_node_id_g), DestinationConnections;\nlet recentAssetData = GuardicoreAssets_CL\n| where TimeGenerated >= ago(timeWindow);\nlet max_ts = toscalar(\n    recentAssetData\n    | summarize max(sampling_timestamp_d)\n);\nlet latestAssetData = recentAssetData \n| where sampling_timestamp_d == max_ts;\nsourceConnections\n| join kind=fullouter (destConnections) on AssetId\n| extend \n    SourceConnections = iif(isnull(SourceConnections), 0, SourceConnections),\n    DestinationConnections = iif(isnull(DestinationConnections), 0, DestinationConnections),\n    TotalConnections = SourceConnections + DestinationConnections\n| where isnotempty(AssetId) and AssetId != \"\"\n| top 10 by TotalConnections desc\n| join kind=leftouter (\n    latestAssetData\n    | summarize arg_max(TimeGenerated, *) by id_g // Get latest asset record\n    | project AssetId = tostring(id_g), AssetName = name_s, IPAddresses = ip_addresses_s, Status = status_s\n) on AssetId\n| project AssetName, Status, TotalConnections, AssetId\n| order by TotalConnections desc",
              "size": 0,
              "title": "Top Talkers of the day",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "table"
            },
            "customWidth": "50",
            "name": "query - 2",
            "styleSettings": {
              "maxWidth": "50%"
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "let internetAssets = GuardicoreConnections_CL | where TimeGenerated >= ago(24h) | where source_node_type_s == \"internet\" | where destination_node_type_s == \"asset\" | distinct destination_node_id_g; let recentLabelData = GuardicoreLabels_CL | where TimeGenerated >= ago(24h); let max_ts = toscalar( recentLabelData | summarize max(sampling_timestamp_d) ); let latest_label_data = recentLabelData | where sampling_timestamp_d == max_ts;\n\nlatest_label_data | mv-expand static_asset = parse_json(static_assets_s) | extend static_asset_id = tostring(static_asset.id) | where static_asset_id in (internetAssets) | project TimeGenerated, LabelId = id_g, LabelName = name_s, LabelKey = key_s, LabelValue = value_s, AssetId = static_asset_id, AssetName = tostring(static_asset.name) | union ( GuardicoreLabels_CL | where TimeGenerated >= ago(24h) | mv-expand dynamic_asset = parse_json(dynamic_assets_s) | extend dynamic_asset_id = tostring(dynamic_asset.id) | where dynamic_asset_id in (internetAssets) | project TimeGenerated, LabelId = id_g, LabelName = name_s, LabelKey = key_s, LabelValue = value_s, AssetId = dynamic_asset_id, AssetName = tostring(dynamic_asset.name) ) | summarize arg_max(TimeGenerated, *) by LabelId, AssetId | project LabelId, LabelKey, LabelValue, AssetId, AssetName",
              "size": 0,
              "title": "Public Facing assets (Grouped by labels)",
              "timeContext": {
                "durationMs": 86400000
              },
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "table",
              "gridSettings": {
                "formatters": [
                  {
                    "columnMatch": "LabelId",
                    "formatter": 5
                  }
                ],
                "hierarchySettings": {
                  "treeType": 1,
                  "groupBy": [
                    "LabelKey",
                    "LabelValue"
                  ],
                  "expandTopLevel": true
                }
              }
            },
            "customWidth": "50",
            "name": "query - 3",
            "styleSettings": {
              "maxWidth": "50%"
            }
          }
        ]
      },
      "name": "NumberGroups"
    },
    {
      "type": 12,
      "content": {
        "version": "NotebookGroup/1.0",
        "groupType": "editable",
        "loadType": "always",
        "items": [
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "GuardicoreConnections_CL\n| where unixtime_milliseconds_todatetime(slot_start_time_d) >= ago(24h)\n| summarize arg_max(TimeGenerated, *) by id_g\n| extend verdict = replace(\"_\", \" \", policy_verdict_s)\n| summarize total_count = sum(count_d) by verdict",
              "size": 0,
              "title": "Connections (Past 24 Hours)",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "piechart"
            },
            "customWidth": "50",
            "name": "connection-types-chart",
            "styleSettings": {
              "maxWidth": "40%"
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "GuardicoreIncidents_CL \n| where unixtime_milliseconds_todatetime(time_d) >= ago(24h) \n| summarize arg_max(TimeGenerated, *) by id_g\n| extend type = replace(\"_\", \" \", type_s)\n| summarize count() by type",
              "size": 0,
              "title": "Incidents by Type (Past 24 Hours)",
              "timeContext": {
                "durationMs": 86400000
              },
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "piechart"
            },
            "customWidth": "50",
            "name": "query - 2",
            "styleSettings": {
              "maxWidth": "40%"
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "GuardicoreConnections_CL \n| where unixtime_milliseconds_todatetime(slot_start_time_d) >= ago(24h) \n| summarize arg_max(TimeGenerated, *) by id_g\n| summarize total_count = sum(count_d) by tostring(toint(destination_port_d))\n",
              "size": 0,
              "title": "Connection by Destination Port (Past 24 Hours)",
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "piechart"
            },
            "customWidth": "50",
            "name": "query - 2",
            "styleSettings": {
              "maxWidth": "40%"
            }
          },
          {
            "type": 3,
            "content": {
              "version": "KqlItem/1.0",
              "query": "GuardicoreIncidents_CL \n| where unixtime_milliseconds_todatetime(time_d) >= ago(24h) \n| summarize arg_max(TimeGenerated, *) by id_g\n| extend severity = replace(\"_\", \" \", severity_s)\n| summarize count() by severity",
              "size": 0,
              "title": "Incidents by Severity (Past 24 Hours)",
              "timeContext": {
                "durationMs": 86400000
              },
              "queryType": 0,
              "resourceType": "microsoft.operationalinsights/workspaces",
              "visualization": "piechart"
            },
            "customWidth": "50",
            "name": "query - 2",
            "styleSettings": {
              "maxWidth": "40%"
            }
          }
        ]
      },
      "name": "FirstPieCharts"
    }
  ],
  "fallbackResourceIds": [
    "/subscriptions/195e58c9-a052-4f34-aff2-d67c13145f29/resourcegroups/strategicalliances-rg/providers/microsoft.operationalinsights/workspaces/sentinel-integration"
  ],
  "fromTemplateId": "sentinel-UserWorkbook",
  "$schema": "https://github.com/Microsoft/Application-Insights-Workbooks/blob/master/schema/workbook.json"
}